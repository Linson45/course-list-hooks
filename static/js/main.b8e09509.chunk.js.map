{"version":3,"sources":["actions/types.js","App.js","api/sort.js","actions/postAction.js","reportWebVitals.js","reducers/postReducer.js","reducers/index.js","store.js","index.js"],"names":["GET_COURSES","Search","Input","App","courses","useSelector","state","post","posts","useState","filterTable","setFilterTable","dispatch","useDispatch","parseData","res","target","arr","length","sort","a","b","parseInt","localeCompare","search","value","courses1","filter","o","Object","keys","some","k","String","toLowerCase","includes","moment","format","useEffect","axios","get","result","type","payload","data","justify","align","style","minHeight","id","placeholder","width","onSearch","onChange","e","className","itemLayout","size","pagination","page","console","log","pageSize","dataSource","renderItem","item","Item","color","height","margin","display","Meta","avatar","src","title","href","Url","description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8e09509.chunk.js","sourcesContent":["  \r\nexport const GET_COURSES = \"GET_COURSES\";","import moment from \"moment\";\r\nimport { useState,useEffect } from 'react';\r\nimport React from 'react'\r\nimport { sortFunction } from \"./api/sort\";\r\nimport { fetchApi } from \"./api\";\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {getCourses} from './actions/postAction'\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Input,\r\n  List,\r\n  Avatar,\r\n  Row,\r\n  Col\r\n} from \"antd\";\r\nconst { Search } = Input;\r\n\r\n\r\nconst  App=()=>{\r\n\r\n  const courses=useSelector((state)=>state.post.posts)\r\n  const [filterTable,setFilterTable]=useState(courses?courses:[])\r\n  const dispatch=useDispatch();\r\n  \r\n  \r\n\r\n  function parseData(res) {\r\n    return sortFunction(res, \"Course Id\");\r\n  }\r\n  // function fetchCourses(){\r\n  //   //this.setState({ loading: true });\r\n\r\n  //   fetchApi(\"https://nut-case.s3.amazonaws.com/coursessc.json\", \"get\").then(\r\n  //     (res) => {\r\n  //       console.log(\"responseJson\", res);\r\n  //       setCourses(parseData(res));\r\n  //       setFilterTable(parseData(res));\r\n  //     }\r\n  //   );\r\n  // };\r\n  function search(value){\r\n    let { courses1 } = courses;\r\n    const filterTable = courses.filter((o) =>\r\n      Object.keys(o).some(\r\n        (k) =>\r\n          String(o[\"Course Name\"])\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()) ||\r\n          String(o[\"Child Subject\"])\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()) ||\r\n          String(o[\"Course Id\"])\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()) ||\r\n          String(o[\"Parent Subject\"])\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()) ||\r\n          String(o[\"Provider\"])\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()) ||\r\n          String(o[\"Universities/Institutions\"])\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()) ||\r\n          String(moment(o[\"Next Session Date\"]).format(\"Do MMMM, YYYY\"))\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n      )\r\n    );\r\n    setFilterTable(filterTable ? filterTable : courses,)\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getCourses())\r\n    setFilterTable(parseData(courses))\r\n  }, []);\r\n\r\n    return (\r\n      <div>\r\n        <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ minHeight: '10vh' }}>\r\n          <Search\r\n            id=\"SearchBox\"\r\n            placeholder=\"Search Courses\"\r\n            style={{ width: 600 }}\r\n            onSearch={(value) =>search(value)}\r\n            onChange={(e) => search(e.target.value)}\r\n            className=\"search-input\"\r\n          />\r\n        </Row>\r\n        <List\r\n          itemLayout=\"vertical\"\r\n          size=\"large\"\r\n          pagination={{\r\n            onChange: page => {\r\n              console.log(page);\r\n            },\r\n            pageSize: 5,\r\n          }}\r\n          dataSource={filterTable}\r\n\r\n          renderItem={item => (\r\n            <List.Item\r\n              key={item['Course Id']}\r\n              style={{\r\n                color: \"#fff\",\r\n                width: \"760px\",\r\n                height: \"150px\",\r\n                margin: \"50px auto\",\r\n                display: \"-webkit - box\",\r\n                display: \"-ms - flexbox\",\r\n                display: \"flex\",\r\n                maxWidth: \"770px\",\r\n                background: \"#00C9FF\",\r\n                background: \"-webkit-linear-gradient(to right, #92FE9D, #00C9FF)\",\r\n                background: \"-webkit-gradient(linear, left top, right top, from(#92FE9D), to(#00C9FF))\",\r\n                background: \"-webkit-linear-gradient(left, #92FE9D, #00C9FF)\",\r\n                background: \"-o-linear-gradient(left, #92FE9D, #00C9FF)\",\r\n                background: \"linear-gradient(to right, #92FE9D, #00C9FF)\",\r\n                boxShadow: \"0 0 40px rgba(0,0,0,0.3)\",\r\n              }}\r\n            >\r\n        <List.Item.Meta\r\n          avatar={<Avatar src={\"https://mernlmsassets.s3.ap-south-1.amazonaws.com/Thumbnails/mechine%20learning%20-Thumbnail.png\"} />}\r\n          title={<a href={item.Url}>{item['Course Id']}.  {item[\"Course Name\"]}</a>}\r\n          description={<span>\r\n            <p>{item[\"Child Subject\"]}</p>\r\n            <p>{item[\"Universities/Institutions\"]}</p>\r\n            <p>{item[\"Parent Subject\"]}</p>\r\n          </span>}\r\n\r\n        />\r\n              \r\n            </List.Item>\r\n    )\r\n  }\r\n        />,\r\n      </div >\r\n    );\r\n  }\r\n\r\n\r\nexport default App;\r\n","/**\r\n * @name Sort\r\n * @description will Sort the data based on params supplied\r\n * @param {object} variables\r\n * @param {string} param\r\n */\r\n\r\nexport const sortFunction = (arr, target) =>\r\n  arr.length > 0\r\n    ? arr.sort((a, b) => {\r\n        if (typeof a[target] == \"string\") {\r\n          // console.log(\"The Target\", a[target]);\r\n          return (\r\n            parseInt(a[target]) - parseInt(b[target]) ||\r\n            //a[target].length - b[target].length ||\r\n            a[target].localeCompare(b[target])\r\n          );\r\n        } else {\r\n          // console.log(\"The Target\", a[target], \" Not A string\");\r\n          return parseInt(a[target]) - parseInt(b[target]);\r\n        }\r\n      })\r\n    : arr;\r\n\r\nexport const sortDescFunction = (arr, target) =>\r\n  arr.length > 0\r\n    ? arr.sort((a, b) => {\r\n        if (typeof a[target] == \"string\") {\r\n          // console.log(\"The Target\", a[target]);\r\n          return (\r\n            parseInt(b[target]) - parseInt(a[target]) ||\r\n            //a[target].length - b[target].length ||\r\n            b[target].localeCompare(a[target])\r\n          );\r\n        } else {\r\n          // console.log(\"The Target\", a[target], \" Not A string\");\r\n          return parseInt(b[target]) - parseInt(a[target]);\r\n        }\r\n      })\r\n    : arr;\r\n","import {\r\n    GET_COURSES,\r\n  } from \"./types\";\r\n  import axios from \"axios\";\r\n  \r\n  // get all posts\r\n  export const getCourses = () => async (dispatch) => {\r\n    const result = await axios.get(\"https://nut-case.s3.amazonaws.com/coursessc.json\");\r\n    dispatch({\r\n      type: GET_COURSES,\r\n      payload: result.data,\r\n    });\r\n  };\r\n  \r\n//   // get a post\r\n//   export const getPost = (id) => async (dispatch) => {\r\n//     const result = await axios.get(\r\n//       `https://jsonplaceholder.typicode.com/posts/${id}`\r\n//     );\r\n  \r\n//     dispatch({\r\n//       type: GET_POST,\r\n//       payload: result.data,\r\n//     });\r\n//   };\r\n  \r\n//   // create a post\r\n//   export const createPost = (post) => async (dispatch) => {\r\n//     const result = await axios.post(\r\n//       \"https://jsonplaceholder.typicode.com/posts\",\r\n//       post\r\n//     );\r\n  \r\n//     dispatch({\r\n//       type: CREATE_POST,\r\n//       payload: result.data,\r\n//     });\r\n//   };\r\n  \r\n//   // update a post\r\n//   export const updatePost = (post) => async (dispatch) => {\r\n//     const result = await axios.put(\r\n//       `https://jsonplaceholder.typicode.com/posts/${post.id}`,\r\n//       post\r\n//     );\r\n//     dispatch({\r\n//       type: UPDATE_POST,\r\n//       payload: result.data,\r\n//     });\r\n//   };\r\n  \r\n//   // delete a post\r\n//   export const deletePost = (id) => async (dispatch) => {\r\n//     await axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n//     dispatch({\r\n//       type: DELETE_POST,\r\n//       payload: id,\r\n//     });\r\n//   };","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nimport {\r\n    GET_COURSES,\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = {\r\n    courses: [],\r\n  };\r\n  export default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n      case GET_COURSES:\r\n        return {\r\n          ...state,\r\n          posts: payload,\r\n        };\r\n     \r\n      default:\r\n        return state;\r\n    }\r\n  };","import PostReducer from \"./postReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport postReducer from \"./postReducer\";\r\n\r\nexport default combineReducers({\r\n  post: postReducer,\r\n})","import {createStore, applyMiddleware} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers\";\r\nimport Thunk from \"redux-thunk\";\r\n\r\nconst store =createStore(rootReducer,composeWithDevTools( applyMiddleware(Thunk)))\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}> \r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}